---

  name: Build and Push Images from Release

  permissions:
    contents: write

  on:
    workflow_dispatch:
      inputs:
        release_tag:
          description: "GitHub release tag to build from (e.g., v1.5.0)"
          required: true
        dry_run:
          description: "Dry run (do not push images)"
          required: false
          default: "false"

  env:
    REGISTRY: docker.io
    IMAGE_OWNER: zfpsystems

  jobs:
    build-images:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repo at release tag
          uses: actions/checkout@v4
          with:
            ref: ${{ github.event.inputs.release_tag }}
            fetch-depth: 0

        - name: Verify release tag exists
          run: |
            TAG="${{ github.event.inputs.release_tag }}"
            if ! git rev-parse "$TAG" >/dev/null 2>&1; then
              echo "ERROR: Tag $TAG does not exist!"
              exit 1
            fi

        - name: Validate Docker tag format
          run: |
            TAG="${{ github.event.inputs.release_tag }}"
            if ! [[ "$TAG" =~ ^[a-z0-9_.-]+$ ]]; then
              echo "ERROR: Docker tag must be lowercase letters, digits, dots, underscores, or hyphens."
              exit 1
            fi

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Log in to Docker Hub
          if: ${{ github.event.inputs.dry_run != 'true' }}
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Set up QEMU for cross-platform
          uses: docker/setup-qemu-action@v3

        - name: Build & Push crowler-api
          run: |
            if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
              echo "[DRY RUN] Would build crowler-api:${{ github.event.inputs.release_tag }} and latest"
            else
              docker buildx build \
                --platform linux/amd64,linux/arm64 \
                -f Dockerfile.searchapi \
                -t $REGISTRY/$IMAGE_OWNER/crowler-api:${{ github.event.inputs.release_tag }} \
                -t $REGISTRY/$IMAGE_OWNER/crowler-api:latest \
                --push .
            fi

        - name: Build & Push crowler-events
          run: |
            if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
              echo "[DRY RUN] Would build crowler-events:${{ github.event.inputs.release_tag }} and latest"
            else
              docker buildx build \
                --platform linux/amd64,linux/arm64 \
                -f Dockerfile.events \
                -t $REGISTRY/$IMAGE_OWNER/crowler-events:${{ github.event.inputs.release_tag }} \
                -t $REGISTRY/$IMAGE_OWNER/crowler-events:latest \
                --push .
            fi

        - name: Build & Push crowler-engine
          run: |
            if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
              echo "[DRY RUN] Would build crowler-engine:${{ github.event.inputs.release_tag }} and latest"
            else
              docker buildx build \
                --platform linux/amd64,linux/arm64 \
                -f Dockerfile.thecrowler \
                -t $REGISTRY/$IMAGE_OWNER/crowler-engine:${{ github.event.inputs.release_tag }} \
                -t $REGISTRY/$IMAGE_OWNER/crowler-engine:latest \
                --push .
            fi

        - name: Build & Push crowler-db
          run: |
            if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
              echo "[DRY RUN] Would build crowler-db:${{ github.event.inputs.release_tag }} and latest"
            else
              docker buildx build \
                --platform linux/amd64,linux/arm64 \
                --build-arg TIMEZONE=UTC \
                -f Dockerfile.db \
                -t $REGISTRY/$IMAGE_OWNER/crowler-db:${{ github.event.inputs.release_tag }} \
                -t $REGISTRY/$IMAGE_OWNER/crowler-db:latest \
                --push .
            fi
